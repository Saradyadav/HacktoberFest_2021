#include <bits/stdc++.h>
using namespace std;

int searchInSorted(int arr[], int N, int K) // array is sorted in ascending order
{
    int start = 0, end = N - 1; // searching starts from start variable to end variable
    while (start <= end)        // loop for searching
    {
        int mid = start + (end - start) / 2; // calculating middle element of the search
        if (arr[mid] == K)                   // if search element is found
            return 1;
        if (arr[mid] > K) // if mid element is greater than element to be searched
            end = mid - 1;
        else // if mid element is smaller than element to be searched
            start = mid + 1;
    }
    return -1;
    // Your code here
}

int main(void)
{
    int arr[] = {2, 3, 4, 10, 40};
    int x = 10;
    int n = sizeof(arr) / sizeof(arr[0]);
    int result = searchInSorted(arr, n, x);
    (result == -1) ? cout << "Element is not present in array"
                   : cout << "Element is present at index " << result;
    return 0;
}